{
  "data": {
    "__schema": {
      "directives": [
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Included when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "include"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Skipped when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Directs the executor to skip this field or fragment when the `if`'argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "skip"
        }
      ],
      "mutationType": null,
      "queryType": {
        "name": "QueryType"
      },
      "subscriptionType": null,
      "types": [
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The ID of an object",
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Fetches an object given its ID",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "INTERFACE",
                "name": "Node",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all available feeds",
              "isDeprecated": false,
              "name": "feeds",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Feed",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all agencies",
              "isDeprecated": false,
              "name": "agencies",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Agency",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "**This API is experimental and might change without further notice**  \n Return list of available ticket types.",
              "isDeprecated": false,
              "name": "ticketTypes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TicketType",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single agency based on agency ID",
              "isDeprecated": false,
              "name": "agency",
              "type": {
                "kind": "OBJECT",
                "name": "Agency",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Return stops with these ids",
                  "name": "ids",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Query stops by this name",
                  "name": "name",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get all stops",
              "isDeprecated": false,
              "name": "stops",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stop",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Southern bound of the bounding box",
                  "name": "minLat",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Float",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Western bound of the bounding box",
                  "name": "minLon",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Float",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Northern bound of the bounding box",
                  "name": "maxLat",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Float",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Eastern bound of the bounding box",
                  "name": "maxLon",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Float",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Deprecated, use argument `feeds` instead",
                  "name": "agency",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "List of feed ids from which stops are returned",
                  "name": "feeds",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get all stops within the specified bounding box",
              "isDeprecated": false,
              "name": "stopsByBbox",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stop",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Latitude of the location (WGS 84)",
                  "name": "lat",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Float",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Longitude of the location (WGS 84)",
                  "name": "lon",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Float",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Radius (in meters) to search for from the specified location. Note that this is walking distance along streets and paths rather than a geographic distance.",
                  "name": "radius",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Deprecated, use argument `feeds` instead",
                  "name": "agency",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "List of feed ids from which stops are returned",
                  "name": "feeds",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get all stops within the specified radius from a location. The returned type is a Relay connection (see https://facebook.github.io/relay/graphql/connections.htm). The stopAtDistance type has two values: stop and distance.",
              "isDeprecated": false,
              "name": "stopsByRadius",
              "type": {
                "kind": "OBJECT",
                "name": "stopAtDistanceConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Latitude of the location (WGS 84)",
                  "name": "lat",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Float",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Longitude of the location (WGS 84)",
                  "name": "lon",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Float",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": "2000",
                  "description": "Maximum distance (in meters) to search for from the specified location. Note that this is walking distance along streets and paths rather than a geographic distance. Default is 2000m",
                  "name": "maxDistance",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "20",
                  "description": "Maximum number of results. Search is stopped when this limit is reached. Default is 20.",
                  "name": "maxResults",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only return places that are one of these types, e.g. `STOP` or `BICYCLE_RENT`",
                  "name": "filterByPlaceTypes",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "FilterPlaceType",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only return places that are related to one of these transport modes. This argument can be used to return e.g. only nearest railway stations or only nearest places related to bicycling.",
                  "name": "filterByModes",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Mode",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only include places that match one of the given GTFS ids.",
                  "name": "filterByIds",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputFilters",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get all places (stops, stations, etc. with coordinates) within the specified radius from a location. The returned type is a Relay connection (see https://facebook.github.io/relay/graphql/connections.htm). The placeAtDistance type has two fields: place and distance. The search is done by walking so the distance is according to the network of walkable streets and paths.",
              "isDeprecated": false,
              "name": "nearest",
              "type": {
                "kind": "OBJECT",
                "name": "placeAtDistanceConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single departure row based on its ID (ID format is `FeedId:StopId:PatternId`)",
              "isDeprecated": false,
              "name": "departureRow",
              "type": {
                "kind": "OBJECT",
                "name": "DepartureRow",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single stop based on its ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)",
              "isDeprecated": false,
              "name": "stop",
              "type": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single station based on its ID, i.e. value of field `gtfsId` (format is `FeedId:StopId`)",
              "isDeprecated": false,
              "name": "station",
              "type": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only return stations that match one of the ids in this list",
                  "name": "ids",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Query stations by name",
                  "name": "name",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get all stations",
              "isDeprecated": false,
              "name": "stations",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stop",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only return routes with these ids",
                  "name": "ids",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Query routes by this name",
                  "name": "name",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Deprecated, use argument `transportModes` instead.",
                  "name": "modes",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only include routes, which use one of these modes",
                  "name": "transportModes",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Mode",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get all routes",
              "isDeprecated": false,
              "name": "routes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Route",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single route based on its ID, i.e. value of field `gtfsId` (format is `FeedId:RouteId`)",
              "isDeprecated": false,
              "name": "route",
              "type": {
                "kind": "OBJECT",
                "name": "Route",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all trips",
              "isDeprecated": false,
              "name": "trips",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Trip",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single trip based on its ID, i.e. value of field `gtfsId` (format is `FeedId:TripId`)",
              "isDeprecated": false,
              "name": "trip",
              "type": {
                "kind": "OBJECT",
                "name": "Trip",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "id of the route",
                  "name": "route",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": "-1",
                  "description": "Direction of the trip, possible values: 0, 1 or -1.  \n -1 indicates that the direction is irrelevant, i.e. in case the route has trips only in one direction. See field `directionId` of Pattern.",
                  "name": "direction",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Departure date of the trip, format: YYYY-MM-DD",
                  "name": "date",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Departure time of the trip, format: seconds since midnight of the departure date",
                  "name": "time",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Finds a trip matching the given parameters. This query type is useful if the id of a trip is not known, but other details uniquely identifying the trip are available from some source (e.g. MQTT vehicle positions).",
              "isDeprecated": false,
              "name": "fuzzyTrip",
              "type": {
                "kind": "OBJECT",
                "name": "Trip",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all patterns",
              "isDeprecated": false,
              "name": "patterns",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Pattern",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single pattern based on its ID, i.e. value of field `code` (format is `FeedId:RouteId:DirectionId:PatternVariantNumber`)",
              "isDeprecated": false,
              "name": "pattern",
              "type": {
                "kind": "OBJECT",
                "name": "Pattern",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all clusters",
              "isDeprecated": false,
              "name": "clusters",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Cluster",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single cluster based on its ID, i.e. value of field `gtfsId`",
              "isDeprecated": false,
              "name": "cluster",
              "type": {
                "kind": "OBJECT",
                "name": "Cluster",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only return alerts in these feeds",
                  "name": "feeds",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get all active alerts",
              "isDeprecated": false,
              "name": "alerts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Alert",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get the time range for which the API has data available",
              "isDeprecated": false,
              "name": "serviceTimeRange",
              "type": {
                "kind": "OBJECT",
                "name": "serviceTimeRange",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all bike rental stations",
              "isDeprecated": false,
              "name": "bikeRentalStations",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BikeRentalStation",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single bike rental station based on its ID, i.e. value of field `stationId`",
              "isDeprecated": false,
              "name": "bikeRentalStation",
              "type": {
                "kind": "OBJECT",
                "name": "BikeRentalStation",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all bike parks",
              "isDeprecated": false,
              "name": "bikeParks",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BikePark",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single bike park based on its ID, i.e. value of field `bikeParkId`",
              "isDeprecated": false,
              "name": "bikePark",
              "type": {
                "kind": "OBJECT",
                "name": "BikePark",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Return car parks with these ids.  \n **Note:** if an id is invalid (or the car park service is unavailable) the returned list will contain `null` values.",
                  "name": "ids",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get all car parks",
              "isDeprecated": false,
              "name": "carParks",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CarPark",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get a single car park based on its ID, i.e. value of field `carParkId`",
              "isDeprecated": false,
              "name": "carPark",
              "type": {
                "kind": "OBJECT",
                "name": "CarPark",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Needed until https://github.com/facebook/relay/issues/112 is resolved",
              "isDeprecated": false,
              "name": "viewer",
              "type": {
                "kind": "OBJECT",
                "name": "QueryType",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Date of departure or arrival in format YYYY-MM-DD. Default value: current date",
                  "name": "date",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Time of departure or arrival in format hh:mm:ss. Default value: current time",
                  "name": "time",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The geographical location where the itinerary begins.  \n Use either this argument or `fromPlace`, but not both.",
                  "name": "from",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputCoordinates",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The geographical location where the itinerary ends.  \n Use either this argument or `toPlace`, but not both.",
                  "name": "to",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputCoordinates",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The place where the itinerary begins in format `name::place`, where `place` is either a lat,lng pair (e.g. `Pasila::60.199041,24.932928`) or a stop id (e.g. `Pasila::HSL:1000202`).  \n Use either this argument or `from`, but not both.",
                  "name": "fromPlace",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The place where the itinerary ends in format `name::place`, where `place` is either a lat,lng pair (e.g. `Pasila::60.199041,24.932928`) or a stop id (e.g. `Pasila::HSL:1000202`).  \n Use either this argument or `to`, but not both.",
                  "name": "toPlace",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Whether the itinerary must be wheelchair accessible. Default value: false",
                  "name": "wheelchair",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "3",
                  "description": "The maximum number of itineraries to return. Default value: 3.",
                  "name": "numItineraries",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The maximum distance (in meters) the user is willing to walk per walking section. If the only transport mode allowed is `WALK`, then the value of this argument is ignored.  \n Default: 2000m  \n Maximum value: 15000m  \n **Note:** If this argument has a relatively small value and only some transport modes are allowed (e.g. `WALK` and `RAIL`), it is possible to get an itinerary which has (useless) back and forth public transport legs to avoid walking too long distances.",
                  "name": "maxWalkDistance",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The maximum time (in seconds) of pre-transit travel when using drive-to-transit (park and ride or kiss and ride). Default value: 1800.",
                  "name": "maxPreTransitTime",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "How expensive it is to drive a car when car&parking, increase this value to make car driving legs shorter. Default value: 1.",
                  "name": "carParkCarLegWeight",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "How easily bad itineraries are filtered from results. Value 0 (default) disables filtering. Itineraries are filtered if they are worse than another one in some respect (e.g. more walking) by more than the percentage of filtering level, which is calculated by dividing 100% by the value of this argument (e.g. `itineraryFiltering = 0.5` → 200% worse itineraries are filtered).",
                  "name": "itineraryFiltering",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A multiplier for how bad walking is, compared to being in transit for equal lengths of time.Empirically, values between 10 and 20 seem to correspond well to the concept of not wanting to walk too much without asking for totally ridiculous itineraries, but this observation should in no way be taken as scientific or definitive. Your mileage may vary. Default value: 2.0 ",
                  "name": "walkReluctance",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "How much more reluctant is the user to walk on streets with car traffic allowed. Default value: 1.0",
                  "name": "walkOnStreetReluctance",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "How much worse is waiting for a transit vehicle than being on a transit vehicle, as a multiplier. The default value treats wait and on-vehicle time as the same. It may be tempting to set this higher than walkReluctance (as studies often find this kind of preferences among riders) but the planner will take this literally and walk down a transit line to avoid waiting at a stop. This used to be set less than 1 (0.95) which would make waiting offboard preferable to waiting onboard in an interlined trip. That is also undesirable. If we only tried the shortest possible transfer at each stop to neighboring stop patterns, this problem could disappear. Default value: 1.0.",
                  "name": "waitReluctance",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "How much less bad is waiting at the beginning of the trip (replaces `waitReluctance` on the first boarding). Default value: 0.4",
                  "name": "waitAtBeginningFactor",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Max walk speed along streets, in meters per second. Default value: 1.33",
                  "name": "walkSpeed",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Max bike speed along streets, in meters per second. Default value: 5.0",
                  "name": "bikeSpeed",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Time to get on and off your own bike, in seconds. Default value: 0",
                  "name": "bikeSwitchTime",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Cost of getting on and off your own bike. Unit: seconds. Default value: 0",
                  "name": "bikeSwitchCost",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Optimization type for bicycling legs, e.g. prefer flat terrain. Default value: `QUICK`",
                  "name": "optimize",
                  "type": {
                    "kind": "ENUM",
                    "name": "OptimizeType",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Triangle optimization parameters for bicycling legs. Only effective when `optimize` is set to **TRIANGLE**.",
                  "name": "triangle",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputTriangle",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Whether the itinerary should depart at the specified time (false), or arrive to the destination at the specified time (true). Default value: false.",
                  "name": "arriveBy",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "An ordered list of intermediate locations to be visited.",
                  "name": "intermediatePlaces",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputCoordinates",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "List of routes and agencies which are given higher preference when planning the itinerary",
                  "name": "preferred",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputPreferred",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "List of routes and agencies which are given lower preference when planning the itinerary",
                  "name": "unpreferred",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputUnpreferred",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "This prevents unnecessary transfers by adding a cost for boarding a vehicle. Unit: seconds. Default value: 600",
                  "name": "walkBoardCost",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Separate cost for boarding a vehicle with a bicycle, which is more difficult than on foot. Unit: seconds. Default value: 600",
                  "name": "bikeBoardCost",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "List of routes, trips, agencies and stops which are not used in the itinerary",
                  "name": "banned",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputBanned",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "An extra penalty added on transfers (i.e. all boardings except the first one). Not to be confused with bikeBoardCost and walkBoardCost, which are the cost of boarding a vehicle with and without a bicycle. The boardCosts are used to model the 'usual' perceived cost of using a transit vehicle, and the transferPenalty is used when a user requests even less transfers. In the latter case, we don't actually optimize for fewest transfers, as this can lead to absurd results. Consider a trip in New York from Grand Army Plaza (the one in Brooklyn) to Kalustyan's at noon. The true lowest transfers route is to wait until midnight, when the 4 train runs local the whole way. The actual fastest route is the 2/3 to the 4/5 at Nevins to the 6 at Union Square, which takes half an hour. Even someone optimizing for fewest transfers doesn't want to wait until midnight. Maybe they would be willing to walk to 7th Ave and take the Q to Union Square, then transfer to the 6. If this takes less than optimize_transfer_penalty seconds, then that's what we'll return. Default value: 0.",
                  "name": "transferPenalty",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "This argument has no use for itinerary planning and will be removed later.  \n ~~When true, do not use goal direction or stop at the target, build a full SPT. Default value: false.~~",
                  "name": "batch",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Deprecated, use `transportModes` instead.  \n ~~The set of TraverseModes that a user is willing to use. Default value: WALK | TRANSIT.~~",
                  "name": "modes",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "List of transportation modes that the user is willing to use. Default: `[\"WALK\",\"TRANSIT\"]`",
                  "name": "transportModes",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TransportMode",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The weight multipliers for transit modes. WALK, BICYCLE, CAR, TRANSIT and LEG_SWITCH are not included.",
                  "name": "modeWeight",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputModeWeight",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Is bike rental allowed? Default value: false",
                  "name": "allowBikeRental",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Invariant: `boardSlack + alightSlack <= transferSlack`. Default value: 0",
                  "name": "boardSlack",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Invariant: `boardSlack + alightSlack <= transferSlack`. Default value: 0",
                  "name": "alightSlack",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A global minimum transfer time (in seconds) that specifies the minimum amount of time that must pass between exiting one transit vehicle and boarding another. This time is in addition to time it might take to walk between transit stops. Default value: 0",
                  "name": "minTransferTime",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Penalty (in seconds) for using a non-preferred transfer. Default value: 180",
                  "name": "nonpreferredTransferPenalty",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Maximum number of transfers. Default value: 2",
                  "name": "maxTransfers",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "This argument has currently no effect on which itineraries are returned. Use argument `fromPlace` to start the itinerary from a specific stop.  \n ~~A transit stop that this trip must start from~~",
                  "name": "startTransitStopId",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "ID of the trip on which the itinerary starts. This argument can be used to plan itineraries when the user is already onboard a vehicle. When using this argument, arguments `time` and `from` should be set based on a vehicle position message received from the vehicle running the specified trip.  \n **Note:** this argument only takes into account the route and estimated travel time of the trip (and therefore arguments `time` and `from` must be used correctly to get meaningful itineraries).",
                  "name": "startTransitTripId",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "No effect on itinerary planning, adjust argument `time` instead to get later departures.  \n ~~The maximum wait time in seconds the user is willing to delay trip start. Only effective in Analyst.~~",
                  "name": "claimInitialWait",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Long",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "**Consider this argument experimental** – setting this argument to true causes timeouts and unoptimal routes in many cases.  \n When true, reverse optimize (find alternative transportation mode, which still arrives to the destination in time) this search on the fly after processing each transit leg, rather than reverse-optimizing the entire path when it's done. Default value: false.",
                  "name": "reverseOptimizeOnTheFly",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "When true, realtime updates are ignored during this search. Default value: false",
                  "name": "ignoreRealtimeUpdates",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only useful for testing and troubleshooting.  \n ~~If true, the remaining weight heuristic is disabled. Currently only implemented for the long distance path service. Default value: false.~~",
                  "name": "disableRemainingWeightHeuristic",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Two-letter language code (ISO 639-1) used for returned text.  \n **Note:** only part of the data has translations available and names of stops and POIs are returned in their default language. Due to missing translations, it is sometimes possible that returned text uses a mixture of two languages.",
                  "name": "locale",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A comma-separated list of allowed ticket types.",
                  "name": "ticketTypes",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Tuning parameter for the search algorithm, mainly useful for testing.",
                  "name": "heuristicStepsPerMainStep",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Whether legs should be compacted by performing a reversed search.  \n **Experimental argument, will be removed!**",
                  "name": "compactLegsByReversedSearch",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Plans an itinerary from point A to point B based on the given arguments",
              "isDeprecated": false,
              "name": "plan",
              "type": {
                "kind": "OBJECT",
                "name": "Plan",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "QueryType",
          "possibleTypes": null
        },
        {
          "description": "An object with an ID",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The ID of an object",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "kind": "INTERFACE",
          "name": "Node",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Agency",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Route",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Pattern",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Trip",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Cluster",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "stopAtDistance",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Alert",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "TicketType",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "placeAtDistance",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DepartureRow",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BikeRentalStation",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BikePark",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CarPark",
              "ofType": null
            }
          ]
        },
        {
          "description": "Built-in ID",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "ID",
          "possibleTypes": null
        },
        {
          "description": "A feed provides routing data (stops, routes, timetables, etc.) from one or more public transport agencies.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the feed",
              "isDeprecated": false,
              "name": "feedId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of agencies which provide data to this feed",
              "isDeprecated": false,
              "name": "agencies",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Agency",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Feed",
          "possibleTypes": null
        },
        {
          "description": "Built-in String",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": null
        },
        {
          "description": "A public transport agency",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Agency id",
              "isDeprecated": false,
              "name": "gtfsId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the agency",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URL to the home page of the agency",
              "isDeprecated": false,
              "name": "url",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the time zone which this agency operates on",
              "isDeprecated": false,
              "name": "timezone",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "lang",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Phone number which customers can use to contact this agency",
              "isDeprecated": false,
              "name": "phone",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URL to a web page which has information of fares used by this agency",
              "isDeprecated": false,
              "name": "fareUrl",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of routes operated by this agency",
              "isDeprecated": false,
              "name": "routes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Route",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of alerts which have an effect on all operations of the agency (e.g. a strike)",
              "isDeprecated": false,
              "name": "alerts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Alert",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Agency",
          "possibleTypes": null
        },
        {
          "description": "Route represents a public transportation service, usually from point A to point B and *back*, shown to customers under a single name, e.g. bus 550. Routes contain patterns (see field `patterns`), which describe different variants of the route, e.g. outbound pattern from point A to point B and inbound pattern from point B to point A.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the route in format `FeedId:RouteId`",
              "isDeprecated": false,
              "name": "gtfsId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Agency operating the route",
              "isDeprecated": false,
              "name": "agency",
              "type": {
                "kind": "OBJECT",
                "name": "Agency",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Short name of the route, usually a line number, e.g. 550",
              "isDeprecated": false,
              "name": "shortName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Long name of the route, e.g. Helsinki-Leppävaara",
              "isDeprecated": false,
              "name": "longName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Transport mode of this route, e.g. `BUS`",
              "isDeprecated": false,
              "name": "mode",
              "type": {
                "kind": "ENUM",
                "name": "Mode",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The raw GTFS route type as a integer. For the list of possible values, see: https://developers.google.com/transit/gtfs/reference/#routestxt and https://developers.google.com/transit/gtfs/reference/extended-route-types",
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "desc",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "url",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The color (in hexadecimal format) the agency operating this route would prefer to use on UI elements (e.g. polylines on a map) related to this route. This value is not available for most routes.",
              "isDeprecated": false,
              "name": "color",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The color (in hexadecimal format) the agency operating this route would prefer to use when displaying text related to this route. This value is not available for most routes.",
              "isDeprecated": false,
              "name": "textColor",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "bikesAllowed",
              "type": {
                "kind": "ENUM",
                "name": "BikesAllowed",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of patterns which operate on this route",
              "isDeprecated": false,
              "name": "patterns",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Pattern",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of stops on this route",
              "isDeprecated": false,
              "name": "stops",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stop",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of trips which operate on this route",
              "isDeprecated": false,
              "name": "trips",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Trip",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of alerts which have an effect on the route",
              "isDeprecated": false,
              "name": "alerts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Alert",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Route",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "AIRPLANE",
              "isDeprecated": false,
              "name": "AIRPLANE"
            },
            {
              "deprecationReason": null,
              "description": "BICYCLE",
              "isDeprecated": false,
              "name": "BICYCLE"
            },
            {
              "deprecationReason": null,
              "description": "BUS",
              "isDeprecated": false,
              "name": "BUS"
            },
            {
              "deprecationReason": null,
              "description": "CABLE_CAR",
              "isDeprecated": false,
              "name": "CABLE_CAR"
            },
            {
              "deprecationReason": null,
              "description": "CAR",
              "isDeprecated": false,
              "name": "CAR"
            },
            {
              "deprecationReason": null,
              "description": "FERRY",
              "isDeprecated": false,
              "name": "FERRY"
            },
            {
              "deprecationReason": null,
              "description": "FUNICULAR",
              "isDeprecated": false,
              "name": "FUNICULAR"
            },
            {
              "deprecationReason": null,
              "description": "GONDOLA",
              "isDeprecated": false,
              "name": "GONDOLA"
            },
            {
              "deprecationReason": null,
              "description": "Only used internally. No use for API users.",
              "isDeprecated": false,
              "name": "LEG_SWITCH"
            },
            {
              "deprecationReason": null,
              "description": "RAIL",
              "isDeprecated": false,
              "name": "RAIL"
            },
            {
              "deprecationReason": null,
              "description": "SUBWAY",
              "isDeprecated": false,
              "name": "SUBWAY"
            },
            {
              "deprecationReason": null,
              "description": "TRAM",
              "isDeprecated": false,
              "name": "TRAM"
            },
            {
              "deprecationReason": null,
              "description": "A special transport mode, which includes all public transport.",
              "isDeprecated": false,
              "name": "TRANSIT"
            },
            {
              "deprecationReason": null,
              "description": "WALK",
              "isDeprecated": false,
              "name": "WALK"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "Mode",
          "possibleTypes": null
        },
        {
          "description": "Built-in Int",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Int",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "There is no bike information for the trip.",
              "isDeprecated": false,
              "name": "NO_INFORMATION"
            },
            {
              "deprecationReason": null,
              "description": "The vehicle being used on this particular trip can accommodate at least one bicycle.",
              "isDeprecated": false,
              "name": "ALLOWED"
            },
            {
              "deprecationReason": null,
              "description": "No bicycles are allowed on this trip.",
              "isDeprecated": false,
              "name": "NOT_ALLOWED"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "BikesAllowed",
          "possibleTypes": null
        },
        {
          "description": "Pattern is sequence of stops used by trips on a specific direction and variant of a route. Most routes have only two patterns: one for outbound trips and one for inbound trips",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The route this pattern runs on",
              "isDeprecated": false,
              "name": "route",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Route",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Direction of the pattern. Possible values: 0, 1 or -1.  \n -1 indicates that the direction is irrelevant, i.e. the route has patterns only in one direction.",
              "isDeprecated": false,
              "name": "directionId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the pattern. Pattern name can be just the name of the route or it can include details of destination and origin stops.",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the pattern",
              "isDeprecated": false,
              "name": "code",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Vehicle headsign used by trips of this pattern",
              "isDeprecated": false,
              "name": "headsign",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Trips which run on this pattern",
              "isDeprecated": false,
              "name": "trips",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Trip",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Deprecated, please switch to serviceDate instead",
                  "name": "serviceDay",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Return trips of the pattern active on this date. Format: YYYYMMDD",
                  "name": "serviceDate",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Trips which run on this pattern on the specified date",
              "isDeprecated": false,
              "name": "tripsForDate",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Trip",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of stops served by this pattern",
              "isDeprecated": false,
              "name": "stops",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Stop",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "geometry",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Coordinates",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Coordinates of the route of this pattern in Google polyline encoded format",
              "isDeprecated": false,
              "name": "patternGeometry",
              "type": {
                "kind": "OBJECT",
                "name": "Geometry",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Hash code of the pattern. This value is stable and not dependent on the pattern id, i.e. this value can be used to check whether two patterns are the same, even if their ids have changed.",
              "isDeprecated": false,
              "name": "semanticHash",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of alerts which have an effect on trips of the pattern",
              "isDeprecated": false,
              "name": "alerts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Alert",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Pattern",
          "possibleTypes": null
        },
        {
          "description": "Trip is a specific occurance of a pattern, usually identified by route, direction on the route and exact departure time.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the trip in format `FeedId:TripId`",
              "isDeprecated": false,
              "name": "gtfsId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The route the trip is running on",
              "isDeprecated": false,
              "name": "route",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Route",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "serviceId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of dates when this trip is in service. Format: YYYYMMDD",
              "isDeprecated": false,
              "name": "activeDates",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "tripShortName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Headsign of the vehicle when running on this trip",
              "isDeprecated": false,
              "name": "tripHeadsign",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Short name of the route this trip is running. See field `shortName` of Route.",
              "isDeprecated": false,
              "name": "routeShortName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Direction code of the trip, i.e. is this the outbound or inbound trip of a pattern. Possible values: 0, 1 or `null` if the direction is irrelevant, i.e. the pattern has trips only in one direction.",
              "isDeprecated": false,
              "name": "directionId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "blockId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "shapeId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether the vehicle running this trip can be boarded by a wheelchair",
              "isDeprecated": false,
              "name": "wheelchairAccessible",
              "type": {
                "kind": "ENUM",
                "name": "WheelchairBoarding",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether bikes are allowed on board the vehicle running this trip",
              "isDeprecated": false,
              "name": "bikesAllowed",
              "type": {
                "kind": "ENUM",
                "name": "BikesAllowed",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The pattern the trip is running on",
              "isDeprecated": false,
              "name": "pattern",
              "type": {
                "kind": "OBJECT",
                "name": "Pattern",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of stops this trip passes through",
              "isDeprecated": false,
              "name": "stops",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Stop",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Hash code of the trip. This value is stable and not dependent on the trip id.",
              "isDeprecated": false,
              "name": "semanticHash",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of times when this trip arrives to or departs from a stop",
              "isDeprecated": false,
              "name": "stoptimes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stoptime",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Date for which the departure time is returned. Format: YYYYMMDD. If this argument is not used, field `serviceDay` in the stoptime will have a value of 0.",
                  "name": "serviceDate",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Departure time from the first stop",
              "isDeprecated": false,
              "name": "departureStoptime",
              "type": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Date for which the arrival time is returned. Format: YYYYMMDD. If this argument is not used, field `serviceDay` in the stoptime will have a value of 0.",
                  "name": "serviceDate",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Arrival time to the final stop",
              "isDeprecated": false,
              "name": "arrivalStoptime",
              "type": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Deprecated, please switch to serviceDate instead",
                  "name": "serviceDay",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Date for which stoptimes are returned. Format: YYYYMMDD",
                  "name": "serviceDate",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "stoptimesForDate",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stoptime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of coordinates of this trip's route",
              "isDeprecated": false,
              "name": "geometry",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Coordinates of the route of this trip in Google polyline encoded format",
              "isDeprecated": false,
              "name": "tripGeometry",
              "type": {
                "kind": "OBJECT",
                "name": "Geometry",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of alerts which have an effect on this trip",
              "isDeprecated": false,
              "name": "alerts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Alert",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Trip",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "There is no accessibility information for the stop.",
              "isDeprecated": false,
              "name": "NO_INFORMATION"
            },
            {
              "deprecationReason": null,
              "description": "At least some vehicles at this stop can be boarded by a rider in a wheelchair.",
              "isDeprecated": false,
              "name": "POSSIBLE"
            },
            {
              "deprecationReason": null,
              "description": "Wheelchair boarding is not possible at this stop.",
              "isDeprecated": false,
              "name": "NOT_POSSIBLE"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "WheelchairBoarding",
          "possibleTypes": null
        },
        {
          "description": "Stop can represent either a single public transport stop, where passengers can board and/or disembark vehicles, or a station, which contains multiple stops. See field `locationType`.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Id of the pattern",
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": "0",
                  "description": "Return  departures after this time. Format: Unix timestamp in seconds. Default value: current time",
                  "name": "startTime",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Long",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "86400",
                  "description": "Return stoptimes within this time range, starting from `startTime`. Unit: Seconds",
                  "name": "timeRange",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "2",
                  "description": null,
                  "name": "numberOfDepartures",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "false",
                  "description": "If true, only those departures which allow boarding are returned",
                  "name": "omitNonPickups",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns timetable of the specified pattern at this stop",
              "isDeprecated": false,
              "name": "stopTimesForPattern",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stoptime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ÌD of the stop in format `FeedId:StopId`",
              "isDeprecated": false,
              "name": "gtfsId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the stop, e.g. Pasilan asema",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude of the stop (WGS 84)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude of the stop (WGS 84)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Stop code which is visible at the stop",
              "isDeprecated": false,
              "name": "code",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Description of the stop, usually a street name",
              "isDeprecated": false,
              "name": "desc",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "zoneId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "url",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Identifies whether this stop represents a stop or station.",
              "isDeprecated": false,
              "name": "locationType",
              "type": {
                "kind": "ENUM",
                "name": "LocationType",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The station which this stop is part of (or null if this stop is not part of a station)",
              "isDeprecated": false,
              "name": "parentStation",
              "type": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether wheelchair boarding is possible for at least some of vehicles on this stop",
              "isDeprecated": false,
              "name": "wheelchairBoarding",
              "type": {
                "kind": "ENUM",
                "name": "WheelchairBoarding",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "direction",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "timezone",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The raw GTFS route type used by routes which pass through this stop. For the list of possible values, see: https://developers.google.com/transit/gtfs/reference/#routestxt and https://developers.google.com/transit/gtfs/reference/extended-route-types",
              "isDeprecated": false,
              "name": "vehicleType",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Transport mode (e.g. `BUS`) used by routes which pass through this stop or `null` if mode cannot be determined, e.g. in case no routes pass through the stop.  \n Note that also other types of vehicles may use the stop, e.g. tram replacement buses might use stops which have `TRAM` as their mode.",
              "isDeprecated": false,
              "name": "vehicleMode",
              "type": {
                "kind": "ENUM",
                "name": "Mode",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Identifier of the platform, usually a number. This value is only present for stops that are part of a station",
              "isDeprecated": false,
              "name": "platformCode",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The cluster which this stop is part of",
              "isDeprecated": false,
              "name": "cluster",
              "type": {
                "kind": "OBJECT",
                "name": "Cluster",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Returns all stops that are children of this station (Only applicable for stations)",
              "isDeprecated": false,
              "name": "stops",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stop",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Routes which pass through this stop",
              "isDeprecated": false,
              "name": "routes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Route",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Patterns which pass through this stop",
              "isDeprecated": false,
              "name": "patterns",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Pattern",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Maximum distance to the transfer stop. Defaults to unlimited.  \n **Note:** only stops that are linked as a transfer stops to this stop are returned, i.e. this does not do a query to search for *all* stops within radius of `maxDistance`.",
                  "name": "maxDistance",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "List of nearby stops which can be used for transfers",
              "isDeprecated": false,
              "name": "transfers",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "stopAtDistance",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Date in format YYYYMMDD",
                  "name": "date",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "false",
                  "description": "If true, only those departures which allow boarding are returned",
                  "name": "omitNonPickups",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns list of stoptimes for the specified date",
              "isDeprecated": false,
              "name": "stoptimesForServiceDate",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StoptimesInPattern",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "0",
                  "description": "Return departures after this time. Format: Unix timestamp in seconds. Default value: current time",
                  "name": "startTime",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Long",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "86400",
                  "description": "Return stoptimes within this time range, starting from `startTime`. Unit: Seconds",
                  "name": "timeRange",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "5",
                  "description": null,
                  "name": "numberOfDepartures",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "false",
                  "description": "If true, only those departures which allow boarding are returned",
                  "name": "omitNonPickups",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns list of stoptimes (arrivals and departures) at this stop, grouped by patterns",
              "isDeprecated": false,
              "name": "stoptimesForPatterns",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StoptimesInPattern",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "0",
                  "description": "Return departures after this time. Format: Unix timestamp in seconds. Default value: current time",
                  "name": "startTime",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Long",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "86400",
                  "description": "Return stoptimes within this time range, starting from `startTime`. Unit: Seconds",
                  "name": "timeRange",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "5",
                  "description": null,
                  "name": "numberOfDepartures",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "false",
                  "description": "If true, only those departures which allow boarding are returned",
                  "name": "omitNonPickups",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns list of stoptimes (arrivals and departures) at this stop",
              "isDeprecated": false,
              "name": "stoptimesWithoutPatterns",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stoptime",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "PlaceInterface",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Stop",
          "possibleTypes": null
        },
        {
          "description": "Long type",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Long",
          "possibleTypes": null
        },
        {
          "description": "Built-in Boolean",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": null
        },
        {
          "description": "Built-in Float",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Float",
          "possibleTypes": null
        },
        {
          "description": "Identifies whether this stop represents a stop or station.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "A location where passengers board or disembark from a transit vehicle.",
              "isDeprecated": false,
              "name": "STOP"
            },
            {
              "deprecationReason": null,
              "description": "A physical structure or area that contains one or more stop.",
              "isDeprecated": false,
              "name": "STATION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ENTRANCE"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "LocationType",
          "possibleTypes": null
        },
        {
          "description": "Cluster is a list of stops grouped by name and proximity",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the cluster",
              "isDeprecated": false,
              "name": "gtfsId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the cluster",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude of the center of this cluster (i.e. average latitude of stops in this cluster)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude of the center of this cluster (i.e. average longitude of stops in this cluster)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of stops in the cluster",
              "isDeprecated": false,
              "name": "stops",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Stop",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Cluster",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "stop",
              "type": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Walking distance to the stop along streets and paths",
              "isDeprecated": false,
              "name": "distance",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "stopAtDistance",
          "possibleTypes": null
        },
        {
          "description": "Stoptimes grouped by pattern",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "pattern",
              "type": {
                "kind": "OBJECT",
                "name": "Pattern",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "stoptimes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stoptime",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "StoptimesInPattern",
          "possibleTypes": null
        },
        {
          "description": "Interface for places, e.g. stops, stations, parking areas..",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude of the place (WGS 84)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude of the place (WGS 84)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "kind": "INTERFACE",
          "name": "PlaceInterface",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DepartureRow",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BikeRentalStation",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BikePark",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CarPark",
              "ofType": null
            }
          ]
        },
        {
          "description": "Stoptime represents the time when a specific trip arrives to or departs from a specific stop.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The stop where this arrival/departure happens",
              "isDeprecated": false,
              "name": "stop",
              "type": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Scheduled arrival time. Format: seconds since midnight of the departure date",
              "isDeprecated": false,
              "name": "scheduledArrival",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Realtime prediction of arrival time. Format: seconds since midnight of the departure date",
              "isDeprecated": false,
              "name": "realtimeArrival",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The offset from the scheduled arrival time in seconds. Negative values indicate that the trip is running ahead of schedule.",
              "isDeprecated": false,
              "name": "arrivalDelay",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Scheduled departure time. Format: seconds since midnight of the departure date",
              "isDeprecated": false,
              "name": "scheduledDeparture",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Realtime prediction of departure time. Format: seconds since midnight of the departure date",
              "isDeprecated": false,
              "name": "realtimeDeparture",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The offset from the scheduled departure time in seconds. Negative values indicate that the trip is running ahead of schedule",
              "isDeprecated": false,
              "name": "departureDelay",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "true, if this stop is used as a time equalization stop. false otherwise.",
              "isDeprecated": false,
              "name": "timepoint",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "true, if this stoptime has real-time data available",
              "isDeprecated": false,
              "name": "realtime",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "State of real-time data",
              "isDeprecated": false,
              "name": "realtimeState",
              "type": {
                "kind": "ENUM",
                "name": "RealtimeState",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether the vehicle can be boarded at this stop. This field can also be used to indicate if boarding is possible only with special arrangements.",
              "isDeprecated": false,
              "name": "pickupType",
              "type": {
                "kind": "ENUM",
                "name": "PickupDropoffType",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether the vehicle can be disembarked at this stop. This field can also be used to indicate if disembarkation is possible only with special arrangements.",
              "isDeprecated": false,
              "name": "dropoffType",
              "type": {
                "kind": "ENUM",
                "name": "PickupDropoffType",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Departure date of the trip. Format: Unix timestamp (local time) in seconds.",
              "isDeprecated": false,
              "name": "serviceDay",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Trip which this stoptime is for",
              "isDeprecated": false,
              "name": "trip",
              "type": {
                "kind": "OBJECT",
                "name": "Trip",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": "Use headsign instead, will be removed in the future",
              "description": null,
              "isDeprecated": true,
              "name": "stopHeadsign",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Vehicle headsign of the trip on this stop. Trip headsigns can change during the trip (e.g. on routes which run on loops), so this value should be used instead of `tripHeadsign` to display the headsign relevant to the user. ",
              "isDeprecated": false,
              "name": "headsign",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Stoptime",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "The trip information comes from the GTFS feed, i.e. no real-time update has been applied.",
              "isDeprecated": false,
              "name": "SCHEDULED"
            },
            {
              "deprecationReason": null,
              "description": "The trip information has been updated, but the trip pattern stayed the same as the trip pattern of the scheduled trip.",
              "isDeprecated": false,
              "name": "UPDATED"
            },
            {
              "deprecationReason": null,
              "description": "The trip has been canceled by a real-time update.",
              "isDeprecated": false,
              "name": "CANCELED"
            },
            {
              "deprecationReason": null,
              "description": "The trip has been added using a real-time update, i.e. the trip was not present in the GTFS feed.",
              "isDeprecated": false,
              "name": "ADDED"
            },
            {
              "deprecationReason": null,
              "description": "The trip information has been updated and resulted in a different trip pattern compared to the trip pattern of the scheduled trip.",
              "isDeprecated": false,
              "name": "MODIFIED"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "RealtimeState",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Regularly scheduled pickup / drop off.",
              "isDeprecated": false,
              "name": "SCHEDULED"
            },
            {
              "deprecationReason": null,
              "description": "No pickup / drop off available.",
              "isDeprecated": false,
              "name": "NONE"
            },
            {
              "deprecationReason": null,
              "description": "Must phone agency to arrange pickup / drop off.",
              "isDeprecated": false,
              "name": "CALL_AGENCY"
            },
            {
              "deprecationReason": null,
              "description": "Must coordinate with driver to arrange pickup / drop off.",
              "isDeprecated": false,
              "name": "COORDINATE_WITH_DRIVER"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "PickupDropoffType",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The number of points in the string",
              "isDeprecated": false,
              "name": "length",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of coordinates of in a Google encoded polyline format (see https://developers.google.com/maps/documentation/utilities/polylinealgorithm)",
              "isDeprecated": false,
              "name": "points",
              "type": {
                "kind": "SCALAR",
                "name": "Polyline",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Geometry",
          "possibleTypes": null
        },
        {
          "description": "List of coordinates in an encoded polyline format (see https://developers.google.com/maps/documentation/utilities/polylinealgorithm). The value appears in JSON as a string.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Polyline",
          "possibleTypes": null
        },
        {
          "description": "Alert of a current or upcoming disruption in public transportation",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The feed in which this alert was published",
              "isDeprecated": false,
              "name": "feed",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Agency affected by the disruption. Note that this value is present only if the disruption has an effect on all operations of the agency (e.g. in case of a strike).",
              "isDeprecated": false,
              "name": "agency",
              "type": {
                "kind": "OBJECT",
                "name": "Agency",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Route affected by the disruption",
              "isDeprecated": false,
              "name": "route",
              "type": {
                "kind": "OBJECT",
                "name": "Route",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Trip affected by the disruption",
              "isDeprecated": false,
              "name": "trip",
              "type": {
                "kind": "OBJECT",
                "name": "Trip",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Stop affected by the disruption",
              "isDeprecated": false,
              "name": "stop",
              "type": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Patterns affected by the disruption",
              "isDeprecated": false,
              "name": "patterns",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Pattern",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Header of the alert, if available",
              "isDeprecated": false,
              "name": "alertHeaderText",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Header of the alert in all different available languages",
              "isDeprecated": false,
              "name": "alertHeaderTextTranslations",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TranslatedString",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Long description of the alert",
              "isDeprecated": false,
              "name": "alertDescriptionText",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Long descriptions of the alert in all different available languages",
              "isDeprecated": false,
              "name": "alertDescriptionTextTranslations",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TranslatedString",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Url with more information",
              "isDeprecated": false,
              "name": "alertUrl",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time when this alert comes into effect. Format: Unix timestamp in seconds",
              "isDeprecated": false,
              "name": "effectiveStartDate",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time when this alert is not in effect anymore. Format: Unix timestamp in seconds",
              "isDeprecated": false,
              "name": "effectiveEndDate",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Alert",
          "possibleTypes": null
        },
        {
          "description": "Text with language",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "text",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Two-letter language code (ISO 639-1)",
              "isDeprecated": false,
              "name": "language",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "TranslatedString",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude (WGS 84)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude (WGS 84)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Coordinates",
          "possibleTypes": null
        },
        {
          "description": "**This API is experimental and might change without further notice**  \n Describes ticket type",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fareId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "price",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "TicketType",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of items.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "stopAtDistanceEdge",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "stopAtDistanceConnection",
          "possibleTypes": null
        },
        {
          "description": "An edge in a connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The item at the end of the edge",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "OBJECT",
                "name": "stopAtDistance",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "stopAtDistanceEdge",
          "possibleTypes": null
        },
        {
          "description": "Information about pagination in a connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating forwards, are there more items?",
              "isDeprecated": false,
              "name": "hasNextPage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating backwards, are there more items?",
              "isDeprecated": false,
              "name": "hasPreviousPage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating backwards, the cursor to continue.",
              "isDeprecated": false,
              "name": "startCursor",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating forwards, the cursor to continue.",
              "isDeprecated": false,
              "name": "endCursor",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PageInfo",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of items.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "placeAtDistanceEdge",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "placeAtDistanceConnection",
          "possibleTypes": null
        },
        {
          "description": "An edge in a connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The item at the end of the edge",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "OBJECT",
                "name": "placeAtDistance",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "placeAtDistanceEdge",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "place",
              "type": {
                "kind": "INTERFACE",
                "name": "PlaceInterface",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Walking distance to the place along streets and paths",
              "isDeprecated": false,
              "name": "distance",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "placeAtDistance",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Stops",
              "isDeprecated": false,
              "name": "STOP"
            },
            {
              "deprecationReason": null,
              "description": "Departure rows",
              "isDeprecated": false,
              "name": "DEPARTURE_ROW"
            },
            {
              "deprecationReason": null,
              "description": "Bicycle rent stations",
              "isDeprecated": false,
              "name": "BICYCLE_RENT"
            },
            {
              "deprecationReason": null,
              "description": "Bike parks",
              "isDeprecated": false,
              "name": "BIKE_PARK"
            },
            {
              "deprecationReason": null,
              "description": "Car parks",
              "isDeprecated": false,
              "name": "CAR_PARK"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "FilterPlaceType",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Stops to include by GTFS id.",
              "name": "stops",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Routes to include by GTFS id.",
              "name": "routes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Bike rentals to include by id.",
              "name": "bikeRentalStations",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Bike parks to include by id.",
              "name": "bikeParks",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Car parks to include by id.",
              "name": "carParks",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "InputFilters",
          "possibleTypes": null
        },
        {
          "description": "Departure row is a location, which lists departures of a certain pattern from a stop. Departure rows are identified with the pattern, so querying departure rows will return only departures from one stop per pattern",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Stop from which the departures leave",
              "isDeprecated": false,
              "name": "stop",
              "type": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude of the stop (WGS 84)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude of the stop (WGS 84)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Pattern of the departure row",
              "isDeprecated": false,
              "name": "pattern",
              "type": {
                "kind": "OBJECT",
                "name": "Pattern",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "0",
                  "description": "Return rows departing after this time. Time format: Unix timestamp in seconds. Default: current time.",
                  "name": "startTime",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Long",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "86400",
                  "description": "How many seconds ahead to search for departures. Default is one day.",
                  "name": "timeRange",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "1",
                  "description": "Maximum number of departures to return.",
                  "name": "numberOfDepartures",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "false",
                  "description": "If true, only those departures which allow boarding are returned",
                  "name": "omitNonPickups",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Departures of the pattern from the stop",
              "isDeprecated": false,
              "name": "stoptimes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stoptime",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "PlaceInterface",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "DepartureRow",
          "possibleTypes": null
        },
        {
          "description": "Time range for which the API has data available",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time from which the API has data available. Format: Unix timestamp in seconds",
              "isDeprecated": false,
              "name": "start",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time until which the API has data available. Format: Unix timestamp in seconds",
              "isDeprecated": false,
              "name": "end",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "serviceTimeRange",
          "possibleTypes": null
        },
        {
          "description": "Bike rental station represents a location where users can rent bicycles for a fee.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the bike rental station",
              "isDeprecated": false,
              "name": "stationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the bike rental station",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Number of bikes currently available on the rental station. The total capacity of this bike rental station is the sum of fields `bikesAvailable` and `spacesAvailable`.",
              "isDeprecated": false,
              "name": "bikesAvailable",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Number of free spaces currently available on the rental station. The total capacity of this bike rental station is the sum of fields `bikesAvailable` and `spacesAvailable`.  \n Note that this value being 0 does not necessarily indicate that bikes cannot be returned to this station, as it might be possible to leave the bike in the vicinity of the rental station, even if the bike racks don't have any spaces available (see field `allowDropoff`).",
              "isDeprecated": false,
              "name": "spacesAvailable",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A description of the current state of this bike rental station, e.g. \"Station on\"",
              "isDeprecated": false,
              "name": "state",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If true, values of `bikesAvailable` and `spacesAvailable` are updated from a real-time source. If false, values of `bikesAvailable` and `spacesAvailable` are always the total capacity divided by two.",
              "isDeprecated": false,
              "name": "realtime",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If true, bikes can be returned to this station.",
              "isDeprecated": false,
              "name": "allowDropoff",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "networks",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude of the bike rental station (WGS 84)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude of the bike rental station (WGS 84)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "PlaceInterface",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "BikeRentalStation",
          "possibleTypes": null
        },
        {
          "description": "Bike park represents a location where bicycles can be parked.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the bike park",
              "isDeprecated": false,
              "name": "bikeParkId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the bike park",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Number of spaces available for bikes",
              "isDeprecated": false,
              "name": "spacesAvailable",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If true, value of `spacesAvailable` is updated from a real-time source.",
              "isDeprecated": false,
              "name": "realtime",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude of the bike park (WGS 84)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude of the bike park (WGS 84)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "PlaceInterface",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "BikePark",
          "possibleTypes": null
        },
        {
          "description": "Car park represents a location where cars can be parked.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ID of the car park",
              "isDeprecated": false,
              "name": "carParkId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the car park",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Number of parking spaces at the car park",
              "isDeprecated": false,
              "name": "maxCapacity",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Number of currently available parking spaces at the car park",
              "isDeprecated": false,
              "name": "spacesAvailable",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If true, value of `spacesAvailable` is updated from a real-time source.",
              "isDeprecated": false,
              "name": "realtime",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude of the car park (WGS 84)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude of the car park (WGS 84)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "PlaceInterface",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "CarPark",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The time and date of travel. Format: Unix timestamp in milliseconds.",
              "isDeprecated": false,
              "name": "date",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The origin",
              "isDeprecated": false,
              "name": "from",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Place",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The destination",
              "isDeprecated": false,
              "name": "to",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Place",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of possible itineraries",
              "isDeprecated": false,
              "name": "itineraries",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Itinerary",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of possible error messages as enum",
              "isDeprecated": false,
              "name": "messageEnums",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of possible error messages in cleartext",
              "isDeprecated": false,
              "name": "messageStrings",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information about the timings for the plan generation",
              "isDeprecated": false,
              "name": "debugOutput",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "debugOutput",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Plan",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit stops, the name of the stop. For points of interest, the name of the POI.",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Type of vertex. (Normal, Bike sharing station, Bike P+R, Transit stop) Mostly used for better localization of bike sharing and P+R station names",
              "isDeprecated": false,
              "name": "vertexType",
              "type": {
                "kind": "ENUM",
                "name": "VertexType",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Latitude of the place (WGS 84)",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Longitude of the place (WGS 84)",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The time the rider will arrive at the place. Format: Unix timestamp in milliseconds.",
              "isDeprecated": false,
              "name": "arrivalTime",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The time the rider will depart the place. Format: Unix timestamp in milliseconds.",
              "isDeprecated": false,
              "name": "departureTime",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The stop related to the place.",
              "isDeprecated": false,
              "name": "stop",
              "type": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The bike rental station related to the place",
              "isDeprecated": false,
              "name": "bikeRentalStation",
              "type": {
                "kind": "OBJECT",
                "name": "BikeRentalStation",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The bike parking related to the place",
              "isDeprecated": false,
              "name": "bikePark",
              "type": {
                "kind": "OBJECT",
                "name": "BikePark",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The car parking related to the place",
              "isDeprecated": false,
              "name": "carPark",
              "type": {
                "kind": "OBJECT",
                "name": "CarPark",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Place",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "NORMAL",
              "isDeprecated": false,
              "name": "NORMAL"
            },
            {
              "deprecationReason": null,
              "description": "TRANSIT",
              "isDeprecated": false,
              "name": "TRANSIT"
            },
            {
              "deprecationReason": null,
              "description": "BIKEPARK",
              "isDeprecated": false,
              "name": "BIKEPARK"
            },
            {
              "deprecationReason": null,
              "description": "BIKESHARE",
              "isDeprecated": false,
              "name": "BIKESHARE"
            },
            {
              "deprecationReason": null,
              "description": "PARKANDRIDE",
              "isDeprecated": false,
              "name": "PARKANDRIDE"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "VertexType",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time when the user leaves from the origin. Format: Unix timestamp in milliseconds.",
              "isDeprecated": false,
              "name": "startTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time when the user arrives to the destination.. Format: Unix timestamp in milliseconds.",
              "isDeprecated": false,
              "name": "endTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Duration of the trip on this itinerary, in seconds.",
              "isDeprecated": false,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "How much time is spent waiting for transit to arrive, in seconds.",
              "isDeprecated": false,
              "name": "waitingTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "How much time is spent walking, in seconds.",
              "isDeprecated": false,
              "name": "walkTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "How far the user has to walk, in meters.",
              "isDeprecated": false,
              "name": "walkDistance",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of Legs. Each Leg is either a walking (cycling, car) portion of the itinerary, or a transit leg on a particular vehicle. So a itinerary where the user walks to the Q train, transfers to the 6, then walks to their destination, has four legs.",
              "isDeprecated": false,
              "name": "legs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Leg",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information about the fares for this itinerary",
              "isDeprecated": false,
              "name": "fares",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "fare",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "How much elevation is gained, in total, over the course of the itinerary, in meters.",
              "isDeprecated": false,
              "name": "elevationGained",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "How much elevation is lost, in total, over the course of the itinerary, in meters.",
              "isDeprecated": false,
              "name": "elevationLost",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Itinerary",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The date and time when this leg begins. Format: Unix timestamp in milliseconds.",
              "isDeprecated": false,
              "name": "startTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The date and time when this leg ends. Format: Unix timestamp in milliseconds.",
              "isDeprecated": false,
              "name": "endTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit leg, the offset from the scheduled departure time of the boarding stop in this leg, i.e. scheduled time of departure at boarding stop = `startTime - departureDelay`",
              "isDeprecated": false,
              "name": "departureDelay",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit leg, the offset from the scheduled arrival time of the alighting stop in this leg, i.e. scheduled time of arrival at alighting stop = `endTime - arrivalDelay`",
              "isDeprecated": false,
              "name": "arrivalDelay",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The mode (e.g. `WALK`) used when traversing this leg.",
              "isDeprecated": false,
              "name": "mode",
              "type": {
                "kind": "ENUM",
                "name": "Mode",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The leg's duration in seconds",
              "isDeprecated": false,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The leg's geometry.",
              "isDeprecated": false,
              "name": "legGeometry",
              "type": {
                "kind": "OBJECT",
                "name": "Geometry",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit legs, the transit agency that operates the service used for this leg. For non-transit legs, `null`.",
              "isDeprecated": false,
              "name": "agency",
              "type": {
                "kind": "OBJECT",
                "name": "Agency",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether there is real-time data about this Leg",
              "isDeprecated": false,
              "name": "realTime",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The distance traveled while traversing the leg in meters.",
              "isDeprecated": false,
              "name": "distance",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether this leg is a transit leg or not.",
              "isDeprecated": false,
              "name": "transitLeg",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether this leg is traversed with a rented bike.",
              "isDeprecated": false,
              "name": "rentedBike",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The Place where the leg originates.",
              "isDeprecated": false,
              "name": "from",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Place",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The Place where the leg ends.",
              "isDeprecated": false,
              "name": "to",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Place",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit legs, the route that is used for traversing the leg. For non-transit legs, `null`.",
              "isDeprecated": false,
              "name": "route",
              "type": {
                "kind": "OBJECT",
                "name": "Route",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit legs, the trip that is used for traversing the leg. For non-transit legs, `null`.",
              "isDeprecated": false,
              "name": "trip",
              "type": {
                "kind": "OBJECT",
                "name": "Trip",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit legs, the service date of the trip. Format: YYYYMMDD. For non-transit legs, null.",
              "isDeprecated": false,
              "name": "serviceDate",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit legs, intermediate stops between the Place where the leg originates and the Place where the leg ends. For non-transit legs, null.",
              "isDeprecated": false,
              "name": "intermediateStops",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stop",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "For transit legs, intermediate stops between the Place where the leg originates and the Place where the leg ends. For non-transit legs, null. Returns Place type, which has fields for e.g. departure and arrival times",
              "isDeprecated": false,
              "name": "intermediatePlaces",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Place",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Whether the destination of this leg (field `to`) is one of the intermediate places specified in the query.",
              "isDeprecated": false,
              "name": "intermediatePlace",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "steps",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "step",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Leg",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The distance in meters that this step takes.",
              "isDeprecated": false,
              "name": "distance",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The longitude of the start of the step.",
              "isDeprecated": false,
              "name": "lon",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The latitude of the start of the step.",
              "isDeprecated": false,
              "name": "lat",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The elevation profile as a list of { distance, elevation } values.",
              "isDeprecated": false,
              "name": "elevationProfile",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "elevationProfileComponent",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "step",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The distance from the start of the step, in meters.",
              "isDeprecated": false,
              "name": "distance",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The elevation at this distance, in meters.",
              "isDeprecated": false,
              "name": "elevation",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "elevationProfileComponent",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ISO 4217 currency code",
              "isDeprecated": false,
              "name": "currency",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Fare price in cents. **Note:** this value is dependent on the currency used, as one cent is not necessarily ¹/₁₀₀ of the basic monerary unit.",
              "isDeprecated": false,
              "name": "cents",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Components which this fare is composed of",
              "isDeprecated": false,
              "name": "components",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "fareComponent",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "fare",
          "possibleTypes": null
        },
        {
          "description": "Component of the fare (i.e. ticket) for a part of the itinerary",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fareId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "ISO 4217 currency code",
              "isDeprecated": false,
              "name": "currency",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Fare price in cents. **Note:** this value is dependent on the currency used, as one cent is not necessarily ¹/₁₀₀ of the basic monerary unit.",
              "isDeprecated": false,
              "name": "cents",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of routes which use this fare component",
              "isDeprecated": false,
              "name": "routes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Route",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "fareComponent",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "totalTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "pathCalculationTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "precalculationTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "renderingTime",
              "type": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "timedOut",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "debugOutput",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Latitude of the place (WGS 84)",
              "name": "lat",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Longitude of the place (WGS 84)",
              "name": "lon",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The name of the place. If specified, the place name in results uses this value instead of `\"Origin\"` or `\"Destination\"`",
              "name": "address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The amount of time, in seconds, to spend at this location before venturing forth.",
              "name": "locationSlack",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "InputCoordinates",
          "possibleTypes": null
        },
        {
          "description": "Optimization type for bicycling legs",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Prefer faster routes",
              "isDeprecated": false,
              "name": "QUICK"
            },
            {
              "deprecationReason": null,
              "description": "Prefer safer routes, i.e. avoid crossing streets and use bike paths when possible",
              "isDeprecated": false,
              "name": "SAFE"
            },
            {
              "deprecationReason": null,
              "description": "Prefer flat terrain",
              "isDeprecated": false,
              "name": "FLAT"
            },
            {
              "deprecationReason": null,
              "description": "GREENWAYS",
              "isDeprecated": false,
              "name": "GREENWAYS"
            },
            {
              "deprecationReason": null,
              "description": "**TRIANGLE** optimization type can be used to set relative preferences of optimization factors. See argument `triangle`.",
              "isDeprecated": false,
              "name": "TRIANGLE"
            },
            {
              "deprecationReason": null,
              "description": "Deprecated, use argument `transferPenalty` to optimize for less transfers.",
              "isDeprecated": false,
              "name": "TRANSFERS"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "OptimizeType",
          "possibleTypes": null
        },
        {
          "description": "Relative importances of optimization factors. Only effective for bicycling legs.  \n Invariant: `timeFactor + slopeFactor + safetyFactor == 1`",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Relative importance of safety",
              "name": "safetyFactor",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Relative importance of flat terrain",
              "name": "slopeFactor",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Relative importance of duration",
              "name": "timeFactor",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "InputTriangle",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "A comma-separated list of ids of the routes preferred by the user.",
              "name": "routes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A comma-separated list of ids of the agencies preferred by the user.",
              "name": "agencies",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Penalty added for using every route that is not preferred if user set any route as preferred. We return number of seconds that we are willing to wait for preferred route.",
              "name": "otherThanPreferredRoutesPenalty",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "InputPreferred",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "A comma-separated list of ids of the routes unpreferred by the user.",
              "name": "routes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A comma-separated list of ids of the agencies unpreferred by the user.",
              "name": "agencies",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "InputUnpreferred",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "A comma-separated list of banned route ids",
              "name": "routes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A comma-separated list of banned agency ids",
              "name": "agencies",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A comma-separated list of banned trip ids",
              "name": "trips",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A comma-separated list of banned stop ids. Note that these stops are only banned for boarding and disembarking vehicles — it is possible to get an itinerary where a vehicle stops at one of these stops",
              "name": "stops",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A comma-separated list of banned stop ids. Only itineraries where these stops are not travelled through are returned, e.g. if a bus route stops at one of these stops, that route will not be used in the itinerary, even if the stop is not used for boarding or disembarking the vehicle. ",
              "name": "stopsHard",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "InputBanned",
          "possibleTypes": null
        },
        {
          "description": "Transportation mode which can be used in the itinerary",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "mode",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "Mode",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Optional additional qualifier for transport mode, e.g. `RENT`",
              "name": "qualifier",
              "type": {
                "kind": "ENUM",
                "name": "Qualifier",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "TransportMode",
          "possibleTypes": null
        },
        {
          "description": "Additional qualifier for a transport mode.  \n Note that qualifiers can only be used with certain transport modes.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "The vehicle used for transport can be rented",
              "isDeprecated": false,
              "name": "RENT"
            },
            {
              "deprecationReason": null,
              "description": "~~HAVE~~  \n **Currently not used**",
              "isDeprecated": false,
              "name": "HAVE"
            },
            {
              "deprecationReason": null,
              "description": "The vehicle used must be left to a parking area before continuing the journey. This qualifier is usable with transport modes `CAR` and `BICYCLE`.  \n Note that the vehicle is only parked if the journey is continued with public transportation (e.g. if only `CAR` and `WALK` transport modes are allowed to be used, the car will not be parked as it is used for the whole journey).",
              "isDeprecated": false,
              "name": "PARK"
            },
            {
              "deprecationReason": null,
              "description": "~~KEEP~~  \n **Currently not used**",
              "isDeprecated": false,
              "name": "KEEP"
            },
            {
              "deprecationReason": null,
              "description": "The user can be picked up by someone else riding a vehicle",
              "isDeprecated": false,
              "name": "PICKUP"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "Qualifier",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The weight of TRAM traverse mode. Values over 1 add cost to tram travel and values under 1 decrease cost",
              "name": "TRAM",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The weight of SUBWAY traverse mode. Values over 1 add cost to subway travel and values under 1 decrease cost",
              "name": "SUBWAY",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The weight of RAIL traverse mode. Values over 1 add cost to rail travel and values under 1 decrease cost",
              "name": "RAIL",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The weight of BUS traverse mode. Values over 1 add cost to bus travel and values under 1 decrease cost",
              "name": "BUS",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The weight of FERRY traverse mode. Values over 1 add cost to ferry travel and values under 1 decrease cost",
              "name": "FERRY",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The weight of CABLE_CAR traverse mode. Values over 1 add cost to cable car travel and values under 1 decrease cost",
              "name": "CABLE_CAR",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The weight of GONDOLA traverse mode. Values over 1 add cost to gondola travel and values under 1 decrease cost",
              "name": "GONDOLA",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The weight of FUNICULAR traverse mode. Values over 1 add cost to funicular travel and values under 1 decrease cost",
              "name": "FUNICULAR",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The weight of AIRPLANE traverse mode. Values over 1 add cost to airplane travel and values under 1 decrease cost",
              "name": "AIRPLANE",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "InputModeWeight",
          "possibleTypes": null
        },
        {
          "description": "A GraphQL Introspection defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, the entry points for query, mutation, and subscription operations.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all types supported by this server.",
              "isDeprecated": false,
              "name": "types",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The type that query operations will be rooted at.",
              "isDeprecated": false,
              "name": "queryType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "isDeprecated": false,
              "name": "mutationType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "'A list of all directives supported by this server.",
              "isDeprecated": false,
              "name": "directives",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "'If this server support subscription, the type that subscription operations will be rooted at.",
              "isDeprecated": false,
              "name": "subscriptionType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Schema",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "kind",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "interfaces",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "possibleTypes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumValues",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputFields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ofType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Type",
          "possibleTypes": null
        },
        {
          "description": "An enum describing what kind of type a given __Type is",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "name": "LIST"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "name": "NON_NULL"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__TypeKind",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Field",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "defaultValue",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__InputValue",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__EnumValue",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "locations",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": "Use `locations`.",
              "description": null,
              "isDeprecated": true,
              "name": "onOperation",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": "Use `locations`.",
              "description": null,
              "isDeprecated": true,
              "name": "onFragment",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": "Use `locations`.",
              "description": null,
              "isDeprecated": true,
              "name": "onField",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Directive",
          "possibleTypes": null
        },
        {
          "description": "An enum describing valid locations where a directive can be placed",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Indicates the directive is valid on queries.",
              "isDeprecated": false,
              "name": "QUERY"
            },
            {
              "deprecationReason": null,
              "description": "Indicates the directive is valid on mutations.",
              "isDeprecated": false,
              "name": "MUTATION"
            },
            {
              "deprecationReason": null,
              "description": "Indicates the directive is valid on fields.",
              "isDeprecated": false,
              "name": "FIELD"
            },
            {
              "deprecationReason": null,
              "description": "Indicates the directive is valid on fragment definitions.",
              "isDeprecated": false,
              "name": "FRAGMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Indicates the directive is valid on fragment spreads.",
              "isDeprecated": false,
              "name": "FRAGMENT_SPREAD"
            },
            {
              "deprecationReason": null,
              "description": "Indicates the directive is valid on inline fragments.",
              "isDeprecated": false,
              "name": "INLINE_FRAGMENT"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "possibleTypes": null
        }
      ]
    }
  }
}